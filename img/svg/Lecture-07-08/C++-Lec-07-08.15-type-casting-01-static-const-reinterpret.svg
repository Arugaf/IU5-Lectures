<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="530px" height="630px" viewBox="-0.5 -0.5 530 630" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-10-24T00:09:23.882Z&quot; agent=&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36&quot; etag=&quot;pk2vHLtPYaNK1DyTnNmC&quot; version=&quot;22.0.6&quot; type=&quot;device&quot;&gt;&lt;diagram name=&quot;Page-1&quot; id=&quot;L0PIO8V_4aDFIqeGwyQa&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><style type="text/css">@import url(https://fonts.googleapis.com/css?family=Comfortaa);&#xa;@import url(https://fonts.googleapis.com/css?family=Ubuntu+Mono);&#xa;</style></defs><g><rect x="0" y="0" width="470" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 468px; height: 1px; padding-top: 20px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style=""><font face="Comfortaa"><span style="font-size: 16px;">Приведение типов</span></font></div></div></div></div></foreignObject><text x="2" y="24" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Приведение типов</text></switch></g><rect x="0" y="40" width="510" height="590" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 508px; height: 1px; padding-top: 47px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Comfortaa; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Четыре вида <b><font color="#e897a2">явного</font></b> преобразованя типов - <b><font color="#22baa1">static_cast</font></b>, <b><font color="#0066cc">const_cast</font></b>, <b><font color="#c22115">reinterpret_cast</font></b> и <b><font color="#5502a8">dynamic_cast</font></b> (не будет рассмотрен здесь).<br /><br /><b><font color="#0066cc">const_cast</font></b> - преобразует указатель на константу/константную ссылку в неконстантный указатель/ссылку. Преобразование возможно только тогда, когда исходная переменная является неконстантной.<br /><br /><i>Ex</i>.<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><b><font color="#22baa1">static_cast</font></b> выполняет преобразование из одного типа в другой если это возможно. Каст даст ошибку времени компиляции если преобразование некорректно.<br /><br /><i>Ex</i>. <br /><br /><br /><br /><br /><br /><b><font color="#c22115">reinterpret_cast</font></b> позволяет интерпретировать один тип как любой другой через преобразование указателей/ссылок. Данный каст не рекомендуется использовать кроме ситуаций, когда есть полное понимание происходящего. Иначе же подобное преобразование может дать потенциально непредсказуемый результат.<br /><br /><i>Ex</i>.<br /><br /><br /><br />Надо помнить, что после выполнения любого из <b><font color="#0066cc">преобразований</font></b>, есть вероятность <b>потери данных</b> при <b><font color="#0066cc">касте</font></b> из <b>большего</b> по размеру типа к <b>меньшему</b>.<br /><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"></blockquote></div></div></div></foreignObject><text x="2" y="59" fill="rgb(0, 0, 0)" font-family="Comfortaa" font-size="12px">Четыре вида явного преобразованя типов - static_cast, const_cast, reinterpret_cast и dynamic_cast (не будет рассмотрен здесь)....</text></switch></g><rect x="32.5" y="139" width="497.5" height="161" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 496px; height: 1px; padding-top: 146px; margin-left: 35px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 14px; font-family: &quot;Ubuntu Mono&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">void foo(const char&amp; c, const char&amp; d) {<br />    const_cast&lt;char&amp;&gt;(c) = 'b'; // валидно, т.к. c - не const<br />    const_cast&lt;char&amp;&gt;(d) = 'c'; // undefined behavior, передали const<br />}<br /><br />char c = 'a';<br />const char f = 'b';<br />foo(a, f); // c == b, f - неизвестно, вероятно падение приложение</div></div></div></foreignObject><text x="35" y="160" fill="rgb(0, 0, 0)" font-family="Ubuntu Mono" font-size="14px">void foo(const char&amp; c, const char&amp; d) {...</text></switch></g><rect x="32.5" y="340" width="477.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 476px; height: 1px; padding-top: 347px; margin-left: 35px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 14px; font-family: &quot;Ubuntu Mono&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">float a = 5.23f;<br />int b = static_cast&lt;int&gt;(a); // корректно, b == 5<br /><br />int* ip = static_cast&lt;int*&gt;(&amp;a); // некорректно, ошибка компиляции</div></div></div></foreignObject><text x="35" y="361" fill="rgb(0, 0, 0)" font-family="Ubuntu Mono" font-size="14px">float a = 5.23f;...</text></switch></g><rect x="32.5" y="513" width="477.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 476px; height: 1px; padding-top: 520px; margin-left: 35px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 14px; font-family: &quot;Ubuntu Mono&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">float pi = 3.14159f;<br />int decimalPi = reinterpret_cast&lt;int&amp;&gt;(pi);<br />    // decimalPi == 1078530000</div></div></div></foreignObject><text x="35" y="534" fill="rgb(0, 0, 0)" font-family="Ubuntu Mono" font-size="14px">float pi = 3.14159f;...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>
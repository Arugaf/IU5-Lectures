<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="510px" height="558px" viewBox="-0.5 -0.5 510 558" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-01-12T22:45:37.001Z&quot; agent=&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot; etag=&quot;teVFPHWPH6IU_0UeFXwV&quot; version=&quot;22.1.18&quot; type=&quot;device&quot;&gt;&lt;diagram name=&quot;Page-1&quot; id=&quot;L0PIO8V_4aDFIqeGwyQa&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Comfortaa:wght@400;500);&#xa;@import url(https://fonts.googleapis.com/css2?family=Ubuntu+Mono:wght@400;500);&#xa;</style></defs><g><rect x="0" y="0" width="470" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 468px; height: 1px; padding-top: 20px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font face="Comfortaa"><span style="font-size: 16px;">Обработка ошибок</span></font></div></div></div></foreignObject><text x="2" y="24" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Обработка ошибок</text></switch></g><rect x="0" y="40" width="510" height="270" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 508px; height: 1px; padding-top: 47px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Comfortaa; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Еще один способ обработки ошибок - это <b><font color="#05e38a">исключения</font></b>.<br /><br /><b><font color="#05e38a">Исключения</font></b> - механизм, введенный в C++11 для ловли и обработки ошибок времени исполнения. В этом случае для того, чтобы бросить ошибку, используется ключевое слово <b>throw</b>.<br /><br /><i>Ex.</i><br /><br /><br /><br /><br /><br /><br /><br />После того, как код доходит до throw, начинается <b><font color="#5597d9">раскрутка стека</font></b>, то есть происходит постепенный возврат по стеку вызовов. <b><font color="#5597d9">Раскрутка</font></b> останавливается, когда доходит до блока, обозначаемого ключевым словом <b>catch</b>. При этом "аргументом" catch указывается тот тип <b><font color="#05e38a">исключения</font></b>, бросаемый через <b>throw</b>, который надо поймать.<br /><br />Catch обязательно должен использовать в связке с <b>try</b>, в блоке которого происходит вызов функции, бросающей <b><font color="#05e38a">исключения</font></b> (в случаях, когда мы хотим обработать это <b><font color="#05e38a">исключение</font></b> и совершить какие-то действия).<br /><br /><i>Ex</i>.</div></div></div></foreignObject><text x="2" y="59" fill="rgb(0, 0, 0)" font-family="Comfortaa" font-size="12px">Еще один способ обработки ошибок - это исключения....</text></switch></g><rect x="30" y="123" width="450" height="140" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 130px; margin-left: 32px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 14px; font-family: &quot;Ubuntu Mono&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font style="font-size: 14px;">int divide(int lhs, int rhs) {<br />    if (rhs == 0) {<br />        throw std::runtime_error("division by zero");<br />    }<br />    return lhs / rhs;<br />}<br /></font></div></div></div></foreignObject><text x="32" y="144" fill="rgb(0, 0, 0)" font-family="Ubuntu Mono" font-size="14px">int divide(int lhs, int rhs) {...</text></switch></g><rect x="30" y="383" width="450" height="140" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 390px; margin-left: 32px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 14px; font-family: &quot;Ubuntu Mono&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font style="font-size: 14px;">int divide(int lhs, int rhs);<br /><br />try {<br />    divide(5, 0);<br />} catch (int) {<br />    ...<br />} catch (std::runtime_error&amp; e) { // зайдет в этот блок<br />    std::cerr &lt;&lt; e.what() &lt;&lt; std::endl;<br />        // e.what() выведет переданный текст ошибки<br />}<br /></font></div></div></div></foreignObject><text x="32" y="404" fill="rgb(0, 0, 0)" font-family="Ubuntu Mono" font-size="14px">int divide(int lhs, int rhs);...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>